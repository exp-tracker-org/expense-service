name: CI - Expense Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b $(go env GOPATH)/bin v1.59.1
      - name: Run linter
        run: golangci-lint run ./...

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Run tests
        run: go test ./... -v -cover

  sast:
    name: Static Analysis (CodeQL)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  sca:
    name: Dependency & Image Scan (Trivy)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Install Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: CRITICAL,HIGH
      - name: Scan Docker image
        run: |
          IMAGE=minnuantony/expense-service:test-scan
          docker build -t $IMAGE .
          trivy image --exit-code 1 --severity CRITICAL,HIGH $IMAGE

  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [sca, sast]
    steps:
      - uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Push Docker Image
        run: |
          IMAGE=minnuantony/expense-service
          SHA_TAG=$IMAGE:sha-${GITHUB_SHA}
          LATEST_TAG=$IMAGE:latest
          docker build -t $SHA_TAG -t $LATEST_TAG .
          docker push $SHA_TAG
          docker push $LATEST_TAG

  deploy:
    name: Update Deployment Manifest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Update Kubernetes Deployment
        run: |
          sed -i "s|image: .*|image: minnuantony/expense-service:sha-${GITHUB_SHA}|" ./k8s/deployment.yaml
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ./k8s/deployment.yaml
          git commit -m "Update expense-service image to sha-${GITHUB_SHA}" || echo "No changes to commit"
          git push
